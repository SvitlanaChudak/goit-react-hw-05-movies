{"version":3,"file":"static/js/257.226d31c5.chunk.js","mappings":"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","sources":["pages/MovieDetails/MovieDetails.styled.jsx","pages/MovieDetails/MovieDetails.jsx","services/api.jsx"],"sourcesContent":["import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nexport const Button = styled.button`\n  border: none;\n  background-color: transparent;\n  margin: 20px 0 0 35px;\n  padding: 0;\n  font-weight: 700;\n  cursor: pointer;\n  :hover {\ntext-decoration: underline;\n  }\n`;\n\nexport const Container = styled.div`\n  display: flex;\n  padding: 30px;\n  background-color: #78BBF5;\n  margin: 20px 30px 30px;\n  box-shadow: 0px 2px 4px -1px rgb(0 0 0 / 20%),\n    0px 4px 5px 0px rgb(0 0 0 / 14%), 0px 1px 10px 0px rgb(0 0 0 / 12%);\n`;\n\nexport const Image = styled.img`\n  width: 300px;\n`;\n\nexport const Info = styled.div`\n  padding-left: 30px;\n  display: flex;\n  flex-direction: column;\n  justify-content: flex-start;\n`;\n\nexport const Title = styled.h2`\n  margin-left: 30px;\n`;\n\nexport const InfoList = styled.ul`\n  text-decoration: none;\n  margin-left: 20px;\n  margin-top: 0;\n  list-style: none;\n`;\n\nexport const InfoLink = styled(Link)`\n  text-decoration: none;\n  color: black;\n  font-weight: 600;\n  :hover {\n    text-decoration: underline;\n`;\n","import { Outlet, useParams, useNavigate, useLocation, } from \"react-router-dom\";\nimport { getMovieDetails } from \"services/api\";\nimport { useState, useEffect } from \"react\";\nimport { Button, Container, Image, Info, Title, InfoList, InfoLink } from \"./MovieDetails.styled\";\n\nconst MovieDetails = () => {\n    const [movie, setMovie] = useState({});\n    const { movieId } = useParams();\n    const navigate = useNavigate();\n    const location = useLocation();\n    const backLinkHref = location.state?.from ?? '/movies';\n    \n        useEffect(() => {\n            const getDetails = async () => {\n                try {\n                    const response = await getMovieDetails(movieId);\n                    setMovie(response);\n                } catch (error) {\n                    console.log('Error')\n                };\n            };\n            getDetails();\n        }, [movieId]);\n    \n      const backToMovies = () => {\n    navigate(backLinkHref);\n  };\n        \n    const { poster_path, title, name, overview, genres } = movie;\n        const poster = poster_path && poster_path  !== null\n            ? `https://image.tmdb.org/t/p/w500${poster_path}`\n            : `https://i.ibb.co/Mg2D0bG/no-image-available.webp`;\n    \n    return (\n        \n        <>\n            <Button type=\"button\" onClick={backToMovies}>Back to movies</Button>\n\n                <Container>\n                <Image src={poster} alt=\"\" width='300' />\n                <Info>\n                <h2>Title</h2>\n                <p>{title || name}</p>\n                <h2>Overview</h2>\n                <p>{overview}</p>\n                <h2>Genres</h2>\n                <p>{genres?.length > 0\n                  ? genres.map(genre => genre.name).join(', ')\n                        : '-'}</p>\n                </Info>\n                </Container>\n                    <Title>Additional information</Title>\n                    <InfoList>\n                        <li>\n                            <InfoLink to={'cast'} state={{ from: location?.state?.from }}>Cast</InfoLink>\n                        </li>\n                        <li>\n                            <InfoLink to={'reviews'} state={{ from: location?.state?.from }}>Reviews</InfoLink>\n                        </li>\n                    </InfoList>\n                    <Outlet />\n                \n\n</>\n    )\n}\n\nexport default MovieDetails;","import axios from \"axios\";\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\naxios.defaults.params = {\n  api_key: '089af85f0d558478de1e10d80ce20497',\n};\n\nexport const getTrending = async () => {\n  const { data } = await axios.get(`trending/all/day?`);\n  return data.results;\n};\n\nexport const searchMovies  = async (query) => {\n  const {data} = await axios.get(`search/movie?query=${query}`);\n  return data.results;\n};\n\nexport const getMovieDetails = async (movieId) => {\n  const {data} = await axios.get(`/movie/${movieId}?`);\n  return data;\n};\n\nexport const getMovieCredits = async (movieId) => {\n  const {data} = await axios.get(`/movie/${movieId}/credits?`);\n  return data.cast;\n};\n\nexport const getMovieReviews = async (movieId) => {\n  const {data} = await axios.get(`/movie/${movieId}/reviews?`);\n  return data.results;\n};\n\n\n"],"names":["Button","styled","Container","Image","Info","Title","InfoList","InfoLink","Link","useState","movie","setMovie","movieId","useParams","navigate","useNavigate","location","useLocation","backLinkHref","state","from","useEffect","getDetails","getMovieDetails","response","console","log","poster_path","title","name","overview","genres","poster","type","onClick","src","alt","width","length","map","genre","join","to","axios","api_key","getTrending","data","results","searchMovies","query","getMovieCredits","cast","getMovieReviews"],"sourceRoot":""}