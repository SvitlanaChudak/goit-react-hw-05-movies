{"version":3,"file":"static/js/736.7a97720f.chunk.js","mappings":"uRAEaA,EAAYC,EAAAA,GAAAA,IAAH,oSAWTC,EAAOD,EAAAA,GAAAA,GAAH,2NAYJE,EAAOF,EAAAA,GAAAA,GAAH,+XAeJG,EAAQH,EAAAA,GAAAA,IAAH,+K,SCElB,EArCa,WACT,IAAQI,GAAYC,EAAAA,EAAAA,IAAU,WAAtBD,QACR,GAAwBE,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,KAcA,OAZIC,EAAAA,EAAAA,YAAU,WACV,IAAMC,EAAO,mCAAG,8GAEeC,EAAAA,EAAAA,IAAgBP,GAF/B,OAEFQ,EAFE,OAGRJ,EAAQI,GAHA,gDAKRC,QAAQC,IAAI,SALJ,iEAAH,qDAQTJ,GACH,GAAE,CAACN,KAGJ,SAACL,EAAD,UACqB,IAAhBQ,EAAKQ,QACN,SAACd,EAAD,UACKM,EAAKS,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,aAAcC,EAArB,EAAqBA,KAAMC,EAA3B,EAA2BA,UAA3B,OACN,UAAClB,EAAD,YACI,SAACC,EAAD,CAAOkB,IAAKH,GAAkC,OAAlBA,EAAhB,yCACIA,GADJ,mDAEsBI,IAAI,GAAGC,MAAM,SAC/C,wBAAKJ,KACL,uCAAeC,OALRH,EADL,OAWd,+EAIX,C,kMCtCDO,EAAAA,EAAAA,SAAAA,QAAyB,gCACzBA,EAAAA,EAAAA,SAAAA,OAAwB,CACtBC,QAAS,oCAGJ,IAAMC,EAAW,mCAAG,sGACFF,EAAAA,EAAAA,IAAA,qBADE,uBACjBG,EADiB,EACjBA,KADiB,kBAElBA,EAAKC,SAFa,2CAAH,qDAKXC,EAAY,mCAAI,WAAOC,GAAP,yFACNN,EAAAA,EAAAA,IAAA,6BAAgCM,IAD1B,uBACpBH,EADoB,EACpBA,KADoB,kBAEpBA,EAAKC,SAFe,2CAAJ,sDAKZG,EAAe,mCAAG,WAAO3B,GAAP,yFACRoB,EAAAA,EAAAA,IAAA,iBAAoBpB,EAApB,MADQ,uBACtBuB,EADsB,EACtBA,KADsB,kBAEtBA,GAFsB,2CAAH,sDAKfhB,EAAe,mCAAG,WAAOP,GAAP,yFACRoB,EAAAA,EAAAA,IAAA,iBAAoBpB,EAApB,cADQ,uBACtBuB,EADsB,EACtBA,KADsB,kBAEtBA,EAAKpB,MAFiB,2CAAH,sDAKfyB,EAAe,mCAAG,WAAO5B,GAAP,yFACRoB,EAAAA,EAAAA,IAAA,iBAAoBpB,EAApB,cADQ,uBACtBuB,EADsB,EACtBA,KADsB,kBAEtBA,EAAKC,SAFiB,2CAAH,qD","sources":["components/Cast/Cast.styled.jsx","components/Cast/Cast.jsx","services/api.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  padding: 30px;\n  background-color: #78BBF5;\n  margin: 20px 30px 30px;\n  box-shadow: 0px 2px 4px -1px rgb(0 0 0 / 20%),\n    0px 4px 5px 0px rgb(0 0 0 / 14%), 0px 1px 10px 0px rgb(0 0 0 / 12%);\n`;\n\nexport const List = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  max-width: 100%;\n  margin-top: 0;\n  margin-left: auto;\n  margin-right: auto;\n  justify-content: center;\n  padding: 0;\n  transition-duration: 300ms;\n`;\n\nexport const Item = styled.li`\n  background: rgb(255, 255, 255);\n  box-shadow: 0px 2px 4px -1px rgb(0 0 0 / 20%),\n    0px 4px 5px 0px rgb(0 0 0 / 14%), 0px 1px 10px 0px rgb(0 0 0 / 12%);\n  width: 100%;\n  max-width: 200px;\n  margin: 10px;\n  border-radius: 5px;\n  display: inline-block;\n  text-decoration: none;\n  color: black;\n  transition-duration: 300ms;\n  text-align: center;\n`;\n\nexport const Image = styled.img`\n  padding: 0px;\n  margin: 0px;\n  height: 280px;\n  width: 100%;\n  display: block;\n  border-top-left-radius: 5px;\n  border-top-right-radius: 5px;\n`;\n","import { useState, useEffect } from \"react\";\nimport { getMovieCredits } from \"services/api\";\nimport { useParams } from 'react-router-dom';\nimport { Container, List, Item, Image } from \"./Cast.styled\";\n\nconst Cast = () => {\n    const { movieId } = useParams('movieId');\n    const [cast, setCast] = useState([]);\n    \n        useEffect(() => {\n        const getCast = async () => {\n            try {\n                const response = await getMovieCredits(movieId);\n                setCast(response);\n            } catch (error) {\n                console.log('Error')\n            };\n            };\n            getCast();\n        }, [movieId]);\n\n    return (\n        <Container>\n            {cast.length !== 0 ? (\n            <List>       \n                {cast.map(({ id, profile_path, name, character }) => (\n                    <Item key={id}>\n                        <Image src={profile_path && profile_path  !== null\n    ? `https://image.tmdb.org/t/p/w500${profile_path}`\n    : `https://i.ibb.co/Mg2D0bG/no-image-available.webp`} alt=\"\" width='150'/>\n                        <h3>{name}</h3>\n                        <p>Character: {character}</p>\n                    </Item>\n                ))}\n                </List>\n                 ) : (\n            <p>We don`t have any cast information for this movie.</p>\n          )}\n        </Container>\n    )\n}\n\nexport default Cast;","import axios from \"axios\";\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\naxios.defaults.params = {\n  api_key: '089af85f0d558478de1e10d80ce20497',\n};\n\nexport const getTrending = async () => {\n  const { data } = await axios.get(`trending/all/day?`);\n  return data.results;\n};\n\nexport const searchMovies  = async (query) => {\n  const {data} = await axios.get(`search/movie?query=${query}`);\n  return data.results;\n};\n\nexport const getMovieDetails = async (movieId) => {\n  const {data} = await axios.get(`/movie/${movieId}?`);\n  return data;\n};\n\nexport const getMovieCredits = async (movieId) => {\n  const {data} = await axios.get(`/movie/${movieId}/credits?`);\n  return data.cast;\n};\n\nexport const getMovieReviews = async (movieId) => {\n  const {data} = await axios.get(`/movie/${movieId}/reviews?`);\n  return data.results;\n};\n\n\n"],"names":["Container","styled","List","Item","Image","movieId","useParams","useState","cast","setCast","useEffect","getCast","getMovieCredits","response","console","log","length","map","id","profile_path","name","character","src","alt","width","axios","api_key","getTrending","data","results","searchMovies","query","getMovieDetails","getMovieReviews"],"sourceRoot":""}