{"version":3,"file":"static/js/387.72bc473b.chunk.js","mappings":"mRAEaA,EAAYC,EAAAA,GAAAA,IAAH,oSAWTC,EAAOD,EAAAA,GAAAA,GAAH,2C,SC4BjB,EAnCgB,WACd,IAAQE,GAAYC,EAAAA,EAAAA,IAAU,WAAtBD,QACN,GAA8BE,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KAcA,OAZAC,EAAAA,EAAAA,YAAU,WACN,IAAMC,EAAU,mCAAG,8GAEYC,EAAAA,EAAAA,IAAgBP,GAF5B,OAELQ,EAFK,OAGXJ,EAAWI,GAHA,gDAKXC,QAAQC,IAAI,SALD,iEAAH,qDAQZJ,GACH,GAAE,CAACN,KAGR,SAACH,EAAD,UACwB,IAAnBM,EAAQQ,QACL,SAACZ,EAAD,UACGI,EAAQS,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,OAAQC,EAAf,EAAeA,QAAf,OACX,2BACE,qCAAaD,MACb,uBAAIC,MAFGF,EADE,OAQf,sEAKX,C,kMCrCDG,EAAAA,EAAAA,SAAAA,QAAyB,gCACzBA,EAAAA,EAAAA,SAAAA,OAAwB,CACtBC,QAAS,oCAGJ,IAAMC,EAAW,mCAAG,sGACFF,EAAAA,EAAAA,IAAA,qBADE,uBACjBG,EADiB,EACjBA,KADiB,kBAElBA,EAAKC,SAFa,2CAAH,qDAKXC,EAAY,mCAAI,WAAOC,GAAP,yFACNN,EAAAA,EAAAA,IAAA,6BAAgCM,IAD1B,uBACpBH,EADoB,EACpBA,KADoB,kBAEpBA,EAAKC,SAFe,2CAAJ,sDAKZG,EAAe,mCAAG,WAAOvB,GAAP,yFACRgB,EAAAA,EAAAA,IAAA,iBAAoBhB,EAApB,MADQ,uBACtBmB,EADsB,EACtBA,KADsB,kBAEtBA,GAFsB,2CAAH,sDAKfK,EAAe,mCAAG,WAAOxB,GAAP,yFACRgB,EAAAA,EAAAA,IAAA,iBAAoBhB,EAApB,cADQ,uBACtBmB,EADsB,EACtBA,KADsB,kBAEtBA,EAAKM,MAFiB,2CAAH,sDAKflB,EAAe,mCAAG,WAAOP,GAAP,yFACRgB,EAAAA,EAAAA,IAAA,iBAAoBhB,EAApB,cADQ,uBACtBmB,EADsB,EACtBA,KADsB,kBAEtBA,EAAKC,SAFiB,2CAAH,qD","sources":["components/Reviews/Reviews.styled.jsx","components/Reviews/Reviews.jsx","services/api.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Container = styled.div`\n  display: flex;\n  padding: 30px;\n  background-color: #78BBF5;\n  margin: 20px 30px 30px;\n  box-shadow: 0px 2px 4px -1px rgb(0 0 0 / 20%),\n    0px 4px 5px 0px rgb(0 0 0 / 14%), 0px 1px 10px 0px rgb(0 0 0 / 12%);\n  flex-direction: column;\n  align-items: center;\n`;\n\nexport const List = styled.ul`\nlist-style: none;\n`;","import { getMovieReviews } from \"services/api\";\nimport { useParams } from 'react-router-dom';\nimport { useState, useEffect } from 'react';\nimport { Container, List } from \"./Reviews.styled\";\n\n\nconst Reviews = () => {\n  const { movieId } = useParams('movieId');\n    const [reviews, setReviews] = useState([]);\n    \n    useEffect(() => {\n        const getReviews = async () => {\n            try {\n                const response = await getMovieReviews(movieId);\n                setReviews(response);\n            } catch (error) {\n                console.log('Error')\n            };\n            };\n            getReviews();\n        }, [movieId]);\n\n    return (\n    <Container>\n        {reviews.length !== 0 ? (\n            <List>\n              {reviews.map(({ id, author, content }) => (\n                <li key={id}>\n                  <h3>Author: {author}</h3>\n                  <p>{content}</p>\n                </li>\n              ))}\n          </List>\n        ) : (\n            <p>We don`t have any reviews for this movie.</p>\n          )}\n      </Container>\n    )\n    \n}\n\nexport default Reviews;\n","import axios from \"axios\";\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\naxios.defaults.params = {\n  api_key: '089af85f0d558478de1e10d80ce20497',\n};\n\nexport const getTrending = async () => {\n  const { data } = await axios.get(`trending/all/day?`);\n  return data.results;\n};\n\nexport const searchMovies  = async (query) => {\n  const {data} = await axios.get(`search/movie?query=${query}`);\n  return data.results;\n};\n\nexport const getMovieDetails = async (movieId) => {\n  const {data} = await axios.get(`/movie/${movieId}?`);\n  return data;\n};\n\nexport const getMovieCredits = async (movieId) => {\n  const {data} = await axios.get(`/movie/${movieId}/credits?`);\n  return data.cast;\n};\n\nexport const getMovieReviews = async (movieId) => {\n  const {data} = await axios.get(`/movie/${movieId}/reviews?`);\n  return data.results;\n};\n\n\n"],"names":["Container","styled","List","movieId","useParams","useState","reviews","setReviews","useEffect","getReviews","getMovieReviews","response","console","log","length","map","id","author","content","axios","api_key","getTrending","data","results","searchMovies","query","getMovieDetails","getMovieCredits","cast"],"sourceRoot":""}